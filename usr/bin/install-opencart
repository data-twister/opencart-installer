#!/bin/bash
OIFS=$IFS;
IFS=",";
TRUNCATE_HELP='-c remove demo products'
DESTINATION_HELP='-p project destination path'
EXTENSION_HELP='-e extension name ex. pdf_catalog <seperate with commas>'
FOR_USER_HELP='-u user name'
DATABASE_HELP='-d database name'
DATABASE_DRIVER_HELP='-D database driver (mysqli)'
MYSQL_USERNAME_HELP='-N database user name'
MYSQL_PASSWORD_HELP='-P database password'
DATABASE_HELP='-d database name'
TEMPLATE_HELP='-t template name ex. Journal <seperate with commas>'
VERSION_HELP='-v version ex stable (required)'
HOST_HELP='-h database host'
DOMAIN_HELP='-m domain url ex. www.opencart.com'
PROJECT_HELP='-n project name ex. mystore'
VERBOSE_HELP='-l true = verbose'
REMOVE_DB_HELP='-o true = remove database if exists'
SQL_DRIVER_HELP='-q mysqli = use mqsqli driver  if exists'

source /etc/opencart-installer.conf

function help()
{
            echo ""
            echo "Opencart Installer by Jason Clark <mithereal@gmail.com> and Nikos Tsitas <nktsitas@gmail.com>" 
            echo ""
            echo "Usage: opencart $VERSION_HELP"
            echo $PROJECT_HELP 
            echo $HOST_HELP
            echo $FOR_USER_HELP
            echo $DATABASE_DRIVER_HELP 
            echo $DATABASE_HELP 
            echo $MYSQL_USERNAME_HELP 
            echo $MYSQL_PASSWORD_HELP 
            echo $TRUNCATE_HELP 
            echo $DESTINATION_HELP 
            echo $DOMAIN_HELP 
            echo $TEMPLATE_HELP 
            echo $EXTENSION_HELP 
            echo $VERBOSE_HELP
            echo $REMOVE_DB_HELP 
}


while getopts ":p:u:d:t:v:m:n:c:h:e:l:o:g:w:r:?" opt; do
    case $opt in
        p)
            DESTINATION_PATH=$OPTARG
            ;;
        e)
            EXTENSION=$OPTARG
            ;;
        u)
            FOR_USER=$OPTARG
            ;;
        d)
            DATABASE=$OPTARG
            ;;
        t)
            TEMPLATE=$OPTARG
            ;;
        v)
            VERSION=$OPTARG
            ;;
           
        h)
             HOST=$OPTARG

            ;;
        g)
             DBDRIVER=$OPTARG

            ;;

        m)
            DOMAIN=$OPTARG
            ;;
        o)
            REMOVE_DB=true
            ;;
        n)
            PROJECT_NAME=$OPTARG
            ;;
        l)
            VERBOSE=true
            echo "Project Name given: $PROJECT_NAME" >&2
            ;;
        c)
            TRUNCATE=true
            echo "the demo products will be removed"
            ;;
         r)
            MYSQL_PASS=$OPTARG
            ;;

         w)
            MYSQL_USERNAME=$OPTARG
            ;;
       
        :)
            echo "Option -$OPTARG requires an argument." >&2
            exit 1
            ;;
        ?)
            help
            exit 0
            ;;
    esac
done

if [ -z "$VERSION" ]
then
            help
            exit 1
fi

OPENCART_PATH=$OPENCART_PATH/opencart
CWD=$(pwd)
templateArray=($TEMPLATE);
extensionArray=($EXTENSION);

if [ -d $TEMP_DIR ];
then
$TEMP_DIR = CWD
fi 

echo ""
echo "Preparing to install Opencart..."
echo ""
if [ -z "$HOST" ]
then
      read -p "Enter the hostname of the database: " MYSQL_HOST
fi
if [ -z "$DBDRIVER" ]
then
      read -p "Enter the  database driver: " DBDRIVER
fi

if [ -z "$MYSQL_USERNAME" ]
then
read -p "Enter the username for the database: " MYSQL_USERNAME
fi

if [ -z "$MYSQL_PASS" ]
then
printf "Enter the password for the database: "
read -s  MYSQL_PASS
fi

if [ ! -d "$TEMP_DIR" ]; then
mkdir -p $TEMP_DIR;
fi

echo "using version: $VERSION" >&2
OPENCART_PATH=$OPENCART_PATH/upload


#git project name
 if [ -z "$PROJECT_NAME" ]
    then
    PROJECT_NAME='mystore'
 fi

# -p <path> (current folder if none given)
if [ -z "$DESTINATION_PATH" ]
then
        DESTINATION_PATH=$CWD/$PROJECT_NAME
        echo "no destination path given, setting to project name: $DESTINATION_PATH" >&2
else
    echo "destination path: $DESTINATION_PATH" >&2
fi

# -u <user> (current user if none given)
if [ -z "$FOR_USER" ]
then
    FOR_USER="$USER"
    echo "no user given, setting to: $FOR_USER" >&2
else
    echo "user: $FOR_USER" >&2
fi

# -h <hostname> (http://example.com/<domain> if none given)
if [ -z "$HOST" ]
then
  HOST=""
echo "no hostname given, setting default: $HOST" >&2
else
    echo "host: $HOST" >&2
fi

# -m <domain> (http://<hostname>/mystore if none given)
if [ -z "$DOMAIN" ]
then
 DOMAIN="$HOST"
    if [ -z "$PROJECT_NAME" ]
    then
        echo "no domain/project name given, setting default: $DOMAIN" >&2
    else
        echo "setting project name to : $PROJECT_NAME" >&2
    fi
else
    echo "domain: $DOMAIN" >&2
fi

# -d <database> (Error if none given)
if [ -z "$DATABASE" ]
then
    if [ -z "$PROJECT_NAME" ]
    then
        DATABASE="${FOR_USER}_mystore"
        echo "no database/project name given, setting default: $DATABASE" >&2
    else
        DATABASE="${FOR_USER}_${PROJECT_NAME}"
        echo "no database given, setting default: $DATABASE" >&2
    fi
else
    echo "database: $DATABASE" >&2
fi

# create path folder if not exists 
if [ ! -d "$DESTINATION_PATH" ]; then
    mkdir -p $DESTINATION_PATH
fi

# detect Operating System
OS=`uname`

if [ $VERSION == 'stable' ]
then
# purge tmp folder
rm -drf $TEMP_DIR/opencart

# clone opencart

cd $TEMP_DIR
git clone  $STABLE

# check if opencart is in folder
if [ -f opencart/upload/index.php ];
then
OPENCART_PATH=$TEMP_DIR/opencart/upload
fi 

elif [ $VERSION == 'upstream' ]
then
# purge tmp folder
if [ -d $TEMP_DIR ];
then
rm -drf $TEMP_DIR/opencart
fi 


# clone opencart
cd $TEMP_DIR
git clone $UPSTREAM

# check if opencart is in folder
if [ -f opencart/upload/index.php ];
then
OPENCART_PATH=$TEMP_DIR/opencart/upload
fi

elif [ $VERSION == 'origin' ]
then
# purge tmp folder
rm -drf $TEMP_DIR/opencart

# clone opencart
cd $TEMP_DIR
git clone $ORIGIN

# check if opencart is in folder
if [ -f opencart/upload/index.php ];
then
OPENCART_PATH=$TEMP_DIR/opencart/upload
fi 

elif [ $VERSION == local ]
then
VERSION=current

else
# purge tmp folder
rm -drf $TEMP_DIR/opencart

# clone opencart
cd $TEMP_DIR

git clone $STABLE

# check if opencart is in folder
if [ -f opencart/upload/index.php ];
then
OPENCART_PATH=$TEMP_DIR/opencart/upload
fi 
fi

# copy opencart
echo "Installing opencart $VERSION..."
cp -r $OPENCART_PATH/* $DESTINATION_PATH
cp $OPENCART_PATH/.htaccess.txt $DESTINATION_PATH/.htaccess

# generate config files 
cp $DESTINATION_PATH/config-dist.php $DESTINATION_PATH/config.php
cp $DESTINATION_PATH/admin/config-dist.php $DESTINATION_PATH/admin/config.php

# change permissions
if [[ "$OS" == 'Linux' ]]; then
if [[ -z "$VERBOSE" ]]; then

    # change permissions
    chown -R $FOR_USER:$FOR_USER $DESTINATION_PATH > /dev/null 2>&1
    chmod -R 755 $DESTINATION_PATH > /dev/null 2>&1

    chmod 0777 $DESTINATION_PATH/config.php > /dev/null 2>&1
    chmod 0777 $DESTINATION_PATH/admin/config.php > /dev/null 2>&1

    chmod 0777 $DESTINATION_PATH/system/cache/ > /dev/null 2>&1
    chmod 0777 $DESTINATION_PATH/system/logs/ > /dev/null 2>&1
    chmod 0777 $DESTINATION_PATH/image/catalog/ > /dev/null 2>&1
    chmod 0777 $DESTINATION_PATH/image/ > /dev/null 2>&1
    chmod 0777 $DESTINATION_PATH/image/cache/ > /dev/null 2>&1
    chmod 0777 $DESTINATION_PATH/image/data/ > /dev/null 2>&1
    chmod 0777 $DESTINATION_PATH/download/ > /dev/null 2>&1
else
    # change permissions
    chown -R $FOR_USER:$FOR_USER $DESTINATION_PATH 
    chmod -R 755 $DESTINATION_PATH 

    chmod 0777 $DESTINATION_PATH/config.php 
    chmod 0777 $DESTINATION_PATH/admin/config.php 

    chmod 0777 $DESTINATION_PATH/system/cache/ 
    chmod 0777 $DESTINATION_PATH/system/logs/
    chmod 0777 $DESTINATION_PATH/image/ 
    chmod 0777 $DESTINATION_PATH/image/catalog/
    chmod 0777 $DESTINATION_PATH/image/cache/ 
    chmod 0777 $DESTINATION_PATH/image/data/ 
    chmod 0777 $DESTINATION_PATH/system/download/ 
fi
else
    icacls $DESTINATION_PATH /grant:r Everyone:RX /t

    icacls $DESTINATION_PATH/config.php /grant:r Everyone:F /t
    icacls $DESTINATION_PATH/admin/config.php /grant:r Everyone:F /t

    icacls $DESTINATION_PATH/system/cache/ /grant:r Everyone:F /t
    icacls $DESTINATION_PATH/system/logs/ /grant:r Everyone:F /t
    icacls $DESTINATION_PATH/image/ /grant:r Everyone:F /t
    icacls $DESTINATION_PATH/image/catalog/ /grant:r Everyone:F /t
    icacls $DESTINATION_PATH/image/cache/ /grant:r Everyone:F /t
    icacls $DESTINATION_PATH/image/data/ /grant:r Everyone:F /t
    icacls $DESTINATION_PATH/system/download/ /grant:r Everyone:F /t
fi

# remove database
if [ "$REMOVE_DB" ]; then
if [[ "$MYSQL_PASS" == '' ]]; then
    echo "drop database $DATABASE" | mysql -u $MYSQL_USERNAME
else
    echo "drop database $DATABASE" | mysql -u $MYSQL_USERNAME -p$MYSQL_PASS
fi

fi

# create database
if [[ "$MYSQL_PASS" == '' ]]; then
    echo "create database IF NOT EXISTS $DATABASE" | mysql -u $MYSQL_USERNAME
else
    echo "create database IF NOT EXISTS $DATABASE" | mysql -u $MYSQL_USERNAME -p$MYSQL_PASS
fi


if [ $? -eq 0 ]; then
    echo "Database $DATABASE Created Successfully."
    if [[ "$MYSQL_PASS" == '' ]]; then

 # workaround for /install/cli_install.php since the authors refuse to make it sane.

if [  -f /tmp/install/cli_install.php ];
then
   rm $DESTINATION_PATH/install/cli_install.php
    rm $DESTINATION_PATH/install/opencart.sql
    cp /tmp/install/cli_install.php $DESTINATION_PATH/install/.
    cp /tmp/install/opencart.sql $DESTINATION_PATH/install/.
  else
  echo "Cannot find correct install script. install/cli_install.php not found. Manual install required."
  exit $?
fi

 #php $DESTINATION_PATH/install/cli_install.php install --db_driver $DBDRIVER --db_hostname $MYSQL_HOST  --db_username $MYSQL_USERNAME --db_password "" --db_database $DATABASE --db_prefix oc_ --username admin --password admin --email admin@example.com --agree_tnc yes --http_server $DOMAIN --domain $PROJECT_NAME 
 php $DESTINATION_PATH/install/cli_install.php install --db_driver $DBDRIVER --db_hostname $MYSQL_HOST  --db_username $MYSQL_USERNAME --db_password "" --db_database $DATABASE  --username admin --password admin --email admin@example.com --agree_tnc yes --http_server $DOMAIN 
 
else

 #php $DESTINATION_PATH/install/cli_install.php install --db_driver $DBDRIVER --db_hostname $MYSQL_HOST  --db_username $MYSQL_USERNAME --db_password $MYSQL_PASS --db_database $DATABASE --db_prefix oc_ --username admin --password admin --email admin@example.com --agree_tnc yes --http_server $DOMAIN --domain $PROJECT_NAME 
 php $DESTINATION_PATH/install/cli_install.php install --db_driver $DBDRIVER --db_hostname $MYSQL_HOST  --db_username $MYSQL_USERNAME --db_password $MYSQL_PASS --db_database $DATABASE  --username admin --password admin --email admin@example.com --agree_tnc yes --http_server $DOMAIN 


fi

if $TRUNCATE; then
    echo "Truncating opencart $VERSION database..."
    if [[ "$MYSQL_PASS" == '' ]]; then
        cat $TRUNCATE_FILE | mysql -u $MYSQL_USERNAME $DATABASE
    else
        cat $TRUNCATE_FILE | mysql -u $MYSQL_USERNAME -p$MYSQL_PASS $DATABASE
    fi
fi

if [ $? -eq 0 ]; then
# remove install folder
rm -rf $DESTINATION_PATH/install/
else
echo "Error in database creation. Manual install required."
fi

else
    echo "Error in database creation. Manual install required."
    if [[ "$REMOVE_ON_ERROR" == 'true' ]]; then
    rm -rf $DESTINATION_PATH/
    fi
fi


# install template 
if [ -z "$TEMPLATE" ]
then
    echo "No template given. Using default" >&2
else
for ((i=0; i<${#templateArray[@]}; ++i));
do
    echo "Installing template: $templateArray[$i]" >&2

        cp -r $THEME_DIR/$templateArray[$i]/$VERSION/upload/* $DESTINATION_PATH/
        chown -R $FOR_USER:$FOR_USER $DESTINATION_PATH

        if [[ "$MYSQL_PASS" == '' ]]; then
            cat $JOURNAL_IMAGE_SETUP_SQL | mysql -u $MYSQL_USERNAME $DATABASE
            cat $JOURNAL_MODULES_SETUP_SQL | mysql -u $MYSQL_USERNAME $DATABASE
        else
            cat $JOURNAL_IMAGE_SETUP_SQL | mysql -u $MYSQL_USERNAME -p$MYSQL_PASS $DATABASE
            cat $JOURNAL_MODULES_SETUP_SQL | mysql -u $MYSQL_USERNAME -p$MYSQL_PASS $DATABASE
        fi
done
fi

# install extension 
if [ "$EXTENSION" ]
then
for ((i=0; i<${#extensionArray[@]}; ++i));
do
    echo "Installing template: $extensionArray[$i]" >&2

        cp -r $EXTENSION_DIR/$extensionArray[$i]/$VERSION/upload/* $DESTINATION_PATH/
        chown -R $FOR_USER:$FOR_USER $DESTINATION_PATH

        if [[ "$MYSQL_PASS" == '' ]]; then
            cat $JOURNAL_IMAGE_SETUP_SQL | mysql -u $MYSQL_USERNAME $DATABASE
            cat $JOURNAL_MODULES_SETUP_SQL | mysql -u $MYSQL_USERNAME $DATABASE
        else
            cat $JOURNAL_IMAGE_SETUP_SQL | mysql -u $MYSQL_USERNAME -p$MYSQL_PASS $DATABASE
            cat $JOURNAL_MODULES_SETUP_SQL | mysql -u $MYSQL_USERNAME -p$MYSQL_PASS $DATABASE
        fi
done
fi

IFS=$OIFS;

#set up git repo
cd $DESTINATION_PATH
if [[ -z "$VERBOSE" ]]; then
git init > /dev/null 2>&1
git add . > /dev/null 2>&1
git commit -m "initial commit" > /dev/null 2>&1
echo "$PROJECT_NAME has been placed under revision control"
else
git init
git add .
git commit -m "initial commit"
fi

exit 0
